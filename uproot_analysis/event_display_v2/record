#!/nfs/slac/g/atlas/u02/cmilke/Anaconda3/bin/python
import sys
sys.path.append('/nfs/slac/g/atlas/u02/cmilke/analysis/util')
import cmilke_analysis_utils as cutils
import math
import uproot
import pickle

def jet_matches(tparteta, tpartphi, truthjeta, truthjphi):
    delta_eta = abs(tparteta - truthjeta)
    delta_phi = abs(tpartphi - truthjphi)
    delta_R = math.hypot(delta_eta, delta_phi)
    return ( delta_R < 0.3 )


event_list_truth_jets = []


branch_list = [
    'tpartpdgID', 'tpartstatus', 'tpartpT', 'tparteta', 'tpartphi',
    'truthjpT', 'truthjeta', 'truthjphi'
]
tjet_index = branch_list.index('truthjpT')

for ntuple_file in cutils.Flavntuple_list_VBFH125_gamgam:
    tree = uproot.rootio.open(ntuple_file)['Nominal']
    for basket_number, basket in enumerate( tree.iterate(branches=branch_list, entrysteps=1000) ):
        print('Basket: ' + str(basket_number) )
        for event in zip(*basket.values()):
            truth_jet_points = ([],[],[])
            truth_particles = event[0:tjet_index]
            truth_jets = event[tjet_index:]

            #iterate through truth particles
            for tpartpdgID, tpartstatus, tpartpT, tparteta, tpartphi in zip( *truth_particles ):
                if cutils.is_outgoing_quark(tpartpdgID, tpartstatus):
                    #match truth particle to truth jet
                    for truthjpT, truthjeta, truthjphi in zip( *truth_jets ):
                        #if truthjpT > 20: continue
                        #if abs(truthjphi) > math.pi: continue

                        if jet_matches(tparteta, tpartphi, truthjeta, truthjphi):
                            truth_jet_points[0].append(truthjeta)
                            truth_jet_points[1].append(truthjphi)
                            truth_jet_points[2].append(truthjpT)
                            break
            event_list_truth_jets.append(truth_jet_points)
        if basket_number >= 0: break

#print(availability)
pickle.dump( event_list_truth_jets, open('event_list_truth_jets.p', 'wb') )
